[tool.poetry]
name = "framework"
version = "0.3.0"
description = "custom async backend framework on sockets and without asyncio"
authors = ["mrtedn21 <bezgin.sasha06@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.1.1"
sqlalchemy = "^2.0.19"
asyncpg = "^0.28.0"
uvloop = "^0.17.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.287"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
  #"ANN",   # flake8-annotations
  "ARG",   # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "C4",    # flake8-comprehensions
  "C90",   # mccabe
  "COM",   # flake8-commas
  "E",     # pycodestyle errors
  "F",     # pyflakes
  "I",     # isort
  "N",     # pep8-naming
  "PERF",  # perflint
  "PGH",   # pygrep-hooks
  "PIE",   # flake8-pie
  "PL",    # pylint
  "PT",    # flake8-pytest-style
  "PTH",   # flake8-use-pathlib
  "PYI",   # flake8-pyi
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "T20",   # flake8-print
  "TCH",   # flake8-type-checking
  "TID",   # flake8-tidy-imports
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W",     # pycodestyle warnings
  "YTT",   # flake8-2020
]

fixable = ["I"]

ignore = [
  "ANN002",
  "ANN003",
  "ANN101",
  "PTH123",
  "SIM117",
]

line-length = 79
